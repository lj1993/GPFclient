//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace GameSystem.ws {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="roomer", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class roomer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string delayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string houseownerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int numberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int roomidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string typeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string delay {
            get {
                return this.delayField;
            }
            set {
                if ((object.ReferenceEquals(this.delayField, value) != true)) {
                    this.delayField = value;
                    this.RaisePropertyChanged("delay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string houseowner {
            get {
                return this.houseownerField;
            }
            set {
                if ((object.ReferenceEquals(this.houseownerField, value) != true)) {
                    this.houseownerField = value;
                    this.RaisePropertyChanged("houseowner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int number {
            get {
                return this.numberField;
            }
            set {
                if ((this.numberField.Equals(value) != true)) {
                    this.numberField = value;
                    this.RaisePropertyChanged("number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int roomid {
            get {
                return this.roomidField;
            }
            set {
                if ((this.roomidField.Equals(value) != true)) {
                    this.roomidField = value;
                    this.RaisePropertyChanged("roomid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="info", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class info : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pwdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int zhField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pwd {
            get {
                return this.pwdField;
            }
            set {
                if ((object.ReferenceEquals(this.pwdField, value) != true)) {
                    this.pwdField = value;
                    this.RaisePropertyChanged("pwd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string sex {
            get {
                return this.sexField;
            }
            set {
                if ((object.ReferenceEquals(this.sexField, value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zh {
            get {
                return this.zhField;
            }
            set {
                if ((this.zhField.Equals(value) != true)) {
                    this.zhField = value;
                    this.RaisePropertyChanged("zh");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="xianshi", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class xianshi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int zhField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int age {
            get {
                return this.ageField;
            }
            set {
                if ((this.ageField.Equals(value) != true)) {
                    this.ageField = value;
                    this.RaisePropertyChanged("age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sex {
            get {
                return this.sexField;
            }
            set {
                if ((object.ReferenceEquals(this.sexField, value) != true)) {
                    this.sexField = value;
                    this.RaisePropertyChanged("sex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int zh {
            get {
                return this.zhField;
            }
            set {
                if ((this.zhField.Equals(value) != true)) {
                    this.zhField = value;
                    this.RaisePropertyChanged("zh");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginTag", Namespace="http://schemas.datacontract.org/2004/07/Entity")]
    [System.SerializableAttribute()]
    public partial class LoginTag : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string singeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string useridField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string singe {
            get {
                return this.singeField;
            }
            set {
                if ((object.ReferenceEquals(this.singeField, value) != true)) {
                    this.singeField = value;
                    this.RaisePropertyChanged("singe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userid {
            get {
                return this.useridField;
            }
            set {
                if ((object.ReferenceEquals(this.useridField, value) != true)) {
                    this.useridField = value;
                    this.RaisePropertyChanged("userid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ws.IGPFservice", CallbackContract=typeof(GameSystem.ws.IGPFserviceCallback))]
    public interface IGPFservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/TheRoomInformation", ReplyAction="http://tempuri.org/IGPFservice/TheRoomInformationResponse")]
        GameSystem.ws.roomer TheRoomInformation(string roomid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/TheRoomInformation", ReplyAction="http://tempuri.org/IGPFservice/TheRoomInformationResponse")]
        System.Threading.Tasks.Task<GameSystem.ws.roomer> TheRoomInformationAsync(string roomid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/PersonalInformation", ReplyAction="http://tempuri.org/IGPFservice/PersonalInformationResponse")]
        GameSystem.ws.info PersonalInformation(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/PersonalInformation", ReplyAction="http://tempuri.org/IGPFservice/PersonalInformationResponse")]
        System.Threading.Tasks.Task<GameSystem.ws.info> PersonalInformationAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getuser", ReplyAction="http://tempuri.org/IGPFservice/getuserResponse")]
        GameSystem.ws.xianshi[] getuser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getuser", ReplyAction="http://tempuri.org/IGPFservice/getuserResponse")]
        System.Threading.Tasks.Task<GameSystem.ws.xianshi[]> getuserAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/register", ReplyAction="http://tempuri.org/IGPFservice/registerResponse")]
        bool register(GameSystem.ws.info i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/register", ReplyAction="http://tempuri.org/IGPFservice/registerResponse")]
        System.Threading.Tasks.Task<bool> registerAsync(GameSystem.ws.info i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/login", ReplyAction="http://tempuri.org/IGPFservice/loginResponse")]
        GameSystem.ws.LoginTag login(string id, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/login", ReplyAction="http://tempuri.org/IGPFservice/loginResponse")]
        System.Threading.Tasks.Task<GameSystem.ws.LoginTag> loginAsync(string id, string pwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/sendmessage", ReplyAction="http://tempuri.org/IGPFservice/sendmessageResponse")]
        void sendmessage(string user, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/sendmessage", ReplyAction="http://tempuri.org/IGPFservice/sendmessageResponse")]
        System.Threading.Tasks.Task sendmessageAsync(string user, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/logout", ReplyAction="http://tempuri.org/IGPFservice/logoutResponse")]
        bool logout(GameSystem.ws.LoginTag l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/logout", ReplyAction="http://tempuri.org/IGPFservice/logoutResponse")]
        System.Threading.Tasks.Task<bool> logoutAsync(GameSystem.ws.LoginTag l);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/updateinfo", ReplyAction="http://tempuri.org/IGPFservice/updateinfoResponse")]
        bool updateinfo(GameSystem.ws.info i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/updateinfo", ReplyAction="http://tempuri.org/IGPFservice/updateinfoResponse")]
        System.Threading.Tasks.Task<bool> updateinfoAsync(GameSystem.ws.info i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/uodatepwd", ReplyAction="http://tempuri.org/IGPFservice/uodatepwdResponse")]
        bool uodatepwd(string npwd, string opwd, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/uodatepwd", ReplyAction="http://tempuri.org/IGPFservice/uodatepwdResponse")]
        System.Threading.Tasks.Task<bool> uodatepwdAsync(string npwd, string opwd, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getfriend", ReplyAction="http://tempuri.org/IGPFservice/getfriendResponse")]
        string[] getfriend(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getfriend", ReplyAction="http://tempuri.org/IGPFservice/getfriendResponse")]
        System.Threading.Tasks.Task<string[]> getfriendAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getroom", ReplyAction="http://tempuri.org/IGPFservice/getroomResponse")]
        GameSystem.ws.roomer[] getroom();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getroom", ReplyAction="http://tempuri.org/IGPFservice/getroomResponse")]
        System.Threading.Tasks.Task<GameSystem.ws.roomer[]> getroomAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/createroom", ReplyAction="http://tempuri.org/IGPFservice/createroomResponse")]
        string createroom(GameSystem.ws.roomer rm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/createroom", ReplyAction="http://tempuri.org/IGPFservice/createroomResponse")]
        System.Threading.Tasks.Task<string> createroomAsync(GameSystem.ws.roomer rm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/fapply", ReplyAction="http://tempuri.org/IGPFservice/fapplyResponse")]
        void fapply(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/fapply", ReplyAction="http://tempuri.org/IGPFservice/fapplyResponse")]
        System.Threading.Tasks.Task fapplyAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/faccess", ReplyAction="http://tempuri.org/IGPFservice/faccessResponse")]
        void faccess(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/faccess", ReplyAction="http://tempuri.org/IGPFservice/faccessResponse")]
        System.Threading.Tasks.Task faccessAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getplinroom", ReplyAction="http://tempuri.org/IGPFservice/getplinroomResponse")]
        string[] getplinroom(string roomid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGPFservice/getplinroom", ReplyAction="http://tempuri.org/IGPFservice/getplinroomResponse")]
        System.Threading.Tasks.Task<string[]> getplinroomAsync(string roomid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGPFserviceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/Receive")]
        void Receive(string p1, string p2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/ReceiveWhisper")]
        void ReceiveWhisper(string p1, string p2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/UserEnter")]
        void UserEnter(string p);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/UserLeave")]
        void UserLeave(string p);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/Announce")]
        void Announce(string a);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/cfapply")]
        void cfapply(string id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IGPFservice/cfacc")]
        void cfacc(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGPFserviceChannel : GameSystem.ws.IGPFservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GPFserviceClient : System.ServiceModel.DuplexClientBase<GameSystem.ws.IGPFservice>, GameSystem.ws.IGPFservice {
        
        public GPFserviceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GPFserviceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GPFserviceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GPFserviceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GPFserviceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public GameSystem.ws.roomer TheRoomInformation(string roomid) {
            return base.Channel.TheRoomInformation(roomid);
        }
        
        public System.Threading.Tasks.Task<GameSystem.ws.roomer> TheRoomInformationAsync(string roomid) {
            return base.Channel.TheRoomInformationAsync(roomid);
        }
        
        public GameSystem.ws.info PersonalInformation(string id) {
            return base.Channel.PersonalInformation(id);
        }
        
        public System.Threading.Tasks.Task<GameSystem.ws.info> PersonalInformationAsync(string id) {
            return base.Channel.PersonalInformationAsync(id);
        }
        
        public GameSystem.ws.xianshi[] getuser() {
            return base.Channel.getuser();
        }
        
        public System.Threading.Tasks.Task<GameSystem.ws.xianshi[]> getuserAsync() {
            return base.Channel.getuserAsync();
        }
        
        public bool register(GameSystem.ws.info i) {
            return base.Channel.register(i);
        }
        
        public System.Threading.Tasks.Task<bool> registerAsync(GameSystem.ws.info i) {
            return base.Channel.registerAsync(i);
        }
        
        public GameSystem.ws.LoginTag login(string id, string pwd) {
            return base.Channel.login(id, pwd);
        }
        
        public System.Threading.Tasks.Task<GameSystem.ws.LoginTag> loginAsync(string id, string pwd) {
            return base.Channel.loginAsync(id, pwd);
        }
        
        public void sendmessage(string user, string msg) {
            base.Channel.sendmessage(user, msg);
        }
        
        public System.Threading.Tasks.Task sendmessageAsync(string user, string msg) {
            return base.Channel.sendmessageAsync(user, msg);
        }
        
        public bool logout(GameSystem.ws.LoginTag l) {
            return base.Channel.logout(l);
        }
        
        public System.Threading.Tasks.Task<bool> logoutAsync(GameSystem.ws.LoginTag l) {
            return base.Channel.logoutAsync(l);
        }
        
        public bool updateinfo(GameSystem.ws.info i) {
            return base.Channel.updateinfo(i);
        }
        
        public System.Threading.Tasks.Task<bool> updateinfoAsync(GameSystem.ws.info i) {
            return base.Channel.updateinfoAsync(i);
        }
        
        public bool uodatepwd(string npwd, string opwd, string id) {
            return base.Channel.uodatepwd(npwd, opwd, id);
        }
        
        public System.Threading.Tasks.Task<bool> uodatepwdAsync(string npwd, string opwd, string id) {
            return base.Channel.uodatepwdAsync(npwd, opwd, id);
        }
        
        public string[] getfriend(string id) {
            return base.Channel.getfriend(id);
        }
        
        public System.Threading.Tasks.Task<string[]> getfriendAsync(string id) {
            return base.Channel.getfriendAsync(id);
        }
        
        public GameSystem.ws.roomer[] getroom() {
            return base.Channel.getroom();
        }
        
        public System.Threading.Tasks.Task<GameSystem.ws.roomer[]> getroomAsync() {
            return base.Channel.getroomAsync();
        }
        
        public string createroom(GameSystem.ws.roomer rm) {
            return base.Channel.createroom(rm);
        }
        
        public System.Threading.Tasks.Task<string> createroomAsync(GameSystem.ws.roomer rm) {
            return base.Channel.createroomAsync(rm);
        }
        
        public void fapply(string user) {
            base.Channel.fapply(user);
        }
        
        public System.Threading.Tasks.Task fapplyAsync(string user) {
            return base.Channel.fapplyAsync(user);
        }
        
        public void faccess(string user) {
            base.Channel.faccess(user);
        }
        
        public System.Threading.Tasks.Task faccessAsync(string user) {
            return base.Channel.faccessAsync(user);
        }
        
        public string[] getplinroom(string roomid) {
            return base.Channel.getplinroom(roomid);
        }
        
        public System.Threading.Tasks.Task<string[]> getplinroomAsync(string roomid) {
            return base.Channel.getplinroomAsync(roomid);
        }
    }
}
